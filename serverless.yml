org: 12jikan
service: nat20

provider:
    name: aws
    runtime: nodejs20.x
    region: us-east-1
    memorySize: 1024
    timeout: 30
    apiGateway:
        # restApi: 'asdasd'
        description: "My User Authentication Service"
    environment:
        # User Pool information
        USER_POOL_ID: ${env:USER_POOL_ID}
        USER_POOL_CLIENT_ID: ${env:USER_POOL_CLIENT_ID}
        IDENTITY_POOL_ID: ${env:IDENTITY_POOL_ID}
        V_METHOD: ${env:verification_method}
        # DB Information information
        DB_NAME: ${env:DB_NAME}
        DB_HOST: ${env:DB_HOST}
        DB_PORT: ${env:DB_PORT}
        DB_USER: ${env:DB_USER}
        DB_PASSWORD: ${env:DB_PASSWORD}

    iamRoleStatements:
        - Effect: "Allow"
          Action:
              - cognito-idp:AdminInitiateAuth
              - cognito-idp:AdminCreateUser
              - cognito-idp:AdminConfirmSignUp
              - cognito-idp:AdminSetUserPassword
              - cognito-idp:AdminGetUser
              - cognito-idp:AdminUpdateUserAttributes
          Resource: arn:aws:cognito-idp:${self:provider.region}:${env:aws_account_id}:userpool/${env:USER_POOL_ID}

package:
    individually: false
    exclude:
        - "**/**" # Excludes everything by default
        - "!src/**" # Then include only what you need
    include:
        - .env

functions:
    # Authentication
    create_user:
        description: "Create a new user"
        handler: src/auth_handlers/auth.create_account
        events:
            - http:
                  cors:
                      origin: "*"
                      maxAge: 86400
                  path: users
                  method: post

    signin_user:
        description: "Sign in a user"
        handler: src/auth_handlers/auth.signin_user
        events:
            - http:
                  cors:
                      origin: "*"
                      maxAge: 86400
                  path: login
                  method: post
                  #   timeout: 1800

    signout_user:
        description: "Sign out a user"
        handler: src/auth_handlers/auth.signout_user
        events:
            - http:
                  cors:
                      origin: "*"
                      maxAge: 86400
                  path: logout
                  method: post
                  #   timeout: 1800

    get_user:
        description: "Get the current active user."
        handler: src/auth_handlers/auth.get_current_user
        events:
            - http:
                  cors:
                      origin: "*"
                      maxAge: 86400
                  path: current_user
                  method: get
                  #   timeout: 1800

    # Campaign:
    create_campaign:
        description: "Create a new campaign"
        handler: src/campaign_handlers/campaign.create_campaign
        events:
            - http:
                  cors:
                      origin: "*"
                      maxAge: 86400
                  path: campaigns
                  method: post

    get_campaign:
        description: "Get A Campaigns"
        handler: src/campaign_handlers/campaign.get_campaign
        events:
            - http:
                  cors:
                      origin: "*"
                      maxAge: 86400
                  path: campaigns/{id}
                  method: get

    get_campaigns:
        description: "Get All DMs Campaigns"
        handler: src/campaign_handlers/campaign.get_campaigns
        events:
            - http:
                  cors:
                      origin: "*"
                      maxAge: 86400
                  path: campaigns
                  method: get
